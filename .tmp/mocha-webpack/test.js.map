{"version":3,"file":"test.js","sources":["webpack/bootstrap 700b003d00039012a5a1","external \"react\"","external \"jsonfile\"","external \"react-intl\"","src/index.js","test/jsdomSetup.js","test/testComponent.jsx","external \"chai\"","external \"chai-enzyme\"","external \"chai-subset\"","external \"babel-register\"","external \"enzyme\"","external \"jsdom\"","external \"path\"","test/test.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 700b003d00039012a5a1","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"jsonfile\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonfile\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"react-intl\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-intl\"\n// module id = 2\n// module chunks = 0","'use strict';\r\n\r\nimport React from 'react';\r\nimport { IntlProvider, intlShape } from 'react-intl';\r\nimport { mount, shallow } from 'enzyme';\r\nimport jsonfile from 'jsonfile';\r\nvar path = require('path');\r\nvar locale = 'en';\r\nvar intl = {};\r\nvar messages = {};\r\n\r\n/**\r\n * Loads translation file.\r\n * @param {string} localeFilePath\r\n * @return {object} messages\r\n */\r\nfunction loadTranslation(localeFilePath) {\r\n    if(typeof localeFilePath == \"undefined\"){\r\n        messages = {};\r\n        return null;\r\n    }\r\n    let fp = path.join(__dirname, localeFilePath);\r\n    messages = jsonfile.readFileSync(\".\" + fp);\r\n    return messages;\r\n}\r\n\r\n/**\r\n * Equivalent to enzyme's 'shallow' method.\r\n * @param {string} node React Component that requires react-intl.\r\n * @return {object}\r\n */\r\nfunction shallowWithIntl(node) {\r\n    const intlProvider = new IntlProvider({locale: locale, messages }, {});\r\n    const { intl } = intlProvider.getChildContext();\r\n    return shallow(React.cloneElement(node, { intl }), { context: { intl } });\r\n}\r\n\r\n/**\r\n * Equivalent to enzyme's 'mount' method.\r\n * @param {string} node React Component that requires react-intl.\r\n * @return {object}\r\n */\r\nfunction mountWithIntl (node, { context, childContextTypes } = {}) {\r\n    const intlProvider = new IntlProvider({locale: locale, messages }, {});\r\n    const { intl } = intlProvider.getChildContext();\r\n    return mount(React.cloneElement(node, { intl }), {\r\n        context: Object.assign({}, context, {intl}),\r\n        childContextTypes: Object.assign({}, { intl: intlShape }, childContextTypes)\r\n    });\r\n}\r\n\r\nfunction getLocale(){\r\n    return locale;\r\n}\r\n\r\nfunction setLocale(str){\r\n    locale = str;\r\n}\r\n\r\nvar enzymeReactIntl = {\r\n    loadTranslation: loadTranslation,\r\n    shallowWithIntl: shallowWithIntl,\r\n    mountWithIntl: mountWithIntl,\r\n    setLocale: setLocale,\r\n    getLocale: getLocale\r\n};\r\nmodule.exports = enzymeReactIntl;\n\n\n// WEBPACK FOOTER //\n// src/index.js","require('babel-register')();\r\n\r\nvar jsdom = require('jsdom').jsdom;\r\n\r\nvar exposedProperties = ['window', 'navigator', 'document'];\r\n\r\nglobal.document = jsdom('');\r\nglobal.window = document.defaultView;\r\nvar i = 1;\r\nObject.keys(document.defaultView).forEach((property) => {\r\n    if (typeof global[property] === 'undefined') {\r\n        exposedProperties.push(property);\r\n        global[property] = document.defaultView[property];\r\n    }\r\n});\r\n\r\nglobal.navigator = {\r\n    userAgent: 'node.js'\r\n};\r\n\r\n//documentRef = document;\n\n\n// WEBPACK FOOTER //\n// test/jsdomSetup.js","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nclass Test extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FormattedMessage id=\"first_msg\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\n\n\n// WEBPACK FOOTER //\n// test/testComponent.jsx","module.exports = require(\"chai\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"chai-enzyme\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai-enzyme\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"chai-subset\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai-subset\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"babel-register\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-register\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"enzyme\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"enzyme\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"jsdom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsdom\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 12\n// module chunks = 0","require(\"./jsdomSetup.js\");\r\nimport React from 'react';\r\nimport chai, {expect, assert} from 'chai';\r\nlet chaiSubset = require('chai-subset');\r\nchai.use(chaiSubset);\r\nimport chaiEnzyme from 'chai-enzyme';\r\nchai.use(chaiEnzyme());\r\nimport { loadTranslation, shallowWithIntl, mountWithIntl, setLocale, getLocale } from '../src/index.js';\r\nimport Test from './testComponent.jsx';\r\nimport jsonfile from 'jsonfile';\r\nlet testLanguageFile = './test/testLanguageFile.json';\r\nlet testLanguageFileMessages = jsonfile.readFileSync(testLanguageFile);\r\n\r\ndescribe('enzymeReactIntl', function() {\r\n\r\n    it('locale should not be empty', function () {\r\n        let localeGet = getLocale();\r\n        expect(localeGet).to.not.equal('');\r\n    });\r\n\r\n    describe('setLocale', function() {\r\n        it('should set the locale', function () {\r\n            let localeSet = 'en-GB';\r\n            setLocale(localeSet);\r\n            let localeGet = getLocale();\r\n            expect(localeSet).to.equal(localeGet);\r\n        });\r\n    });\r\n    describe('loadTranslation', function() {\r\n        it('should load messages from the language file', function () {\r\n            let messages = loadTranslation('/test/testLanguageFile.json');\r\n            expect(messages).to.deep.equal(testLanguageFileMessages);\r\n        });\r\n    });\r\n    describe('shallowWithIntl', function() {\r\n        it('should have intl prop passed to the component', function () {\r\n            loadTranslation('/test/testLanguageFile.json');\r\n            let wrapper = shallowWithIntl(<Test />);\r\n            let p = wrapper.instance().props;\r\n            expect(p).to.contain.key('intl');\r\n        });\r\n    });\r\n    describe('mountWithIntl', function() {\r\n        it('should have intl prop passed to the component', function () {\r\n            loadTranslation('/test/testLanguageFile.json');\r\n            let wrapper = mountWithIntl(<Test />);\r\n            let p = wrapper.instance().props;\r\n            expect(p).to.contain.key('intl');\r\n        });\r\n    });\r\n});\n\n\n// WEBPACK FOOTER //\n// test/test.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChEA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;ACpBA;AACA;;;AAAA;AACA;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;AAVA;AACA;AAYA;;;;;;AChBA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;ACCA;AACA;;;AAAA;AACA;;;AAEA;AACA;;;AACA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AAVA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}