{"version":3,"file":"test.js","sources":["webpack/bootstrap a183ec60ac1a45ba16c2","external \"react\"","external \"jsonfile\"","src/index.js","test/testComponent.jsx","external \"chai\"","external \"chai-enzyme\"","external \"enzyme\"","external \"path\"","external \"react-intl\"","test/test.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a183ec60ac1a45ba16c2","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"jsonfile\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonfile\"\n// module id = 1\n// module chunks = 0","'use strict';\r\n\r\nimport React from 'react';\r\nimport { IntlProvider, intlShape } from 'react-intl';\r\nimport { mount, shallow } from 'enzyme';\r\nimport jsonfile from 'jsonfile';\r\nvar path = require('path');\r\nvar locale = 'en';\r\nvar intl = {};\r\nvar messages = {};\r\n\r\n/**\r\n * Loads translation file.\r\n * @param {string} localeFilePath\r\n * @return {object} messages\r\n */\r\nfunction loadTranslation(localeFilePath) {\r\n    if(typeof localeFilePath == \"undefined\"){\r\n        messages = {};\r\n        return null;\r\n    }\r\n    let fp = path.join(__dirname, localeFilePath);\r\n    messages = jsonfile.readFileSync(\".\" + fp);\r\n    return messages;\r\n}\r\n\r\n/**\r\n * Equivalent to enzyme's 'shallow' method.\r\n * @param {string} node React Component that requires react-intl.\r\n * @return {object}\r\n */\r\nfunction shallowWithIntl(node) {\r\n    initContext();\r\n    return shallow(nodeWithIntlProp(node), { context: { intl } });\r\n}\r\n\r\n/**\r\n * Equivalent to enzyme's 'mount' method.\r\n * @param {string} node React Component that requires react-intl.\r\n * @return {object}\r\n */\r\nfunction mountWithIntl(node) {\r\n    initContext();\r\n    return mount(nodeWithIntlProp(node), {\r\n        context: { intl },\r\n        childContextTypes: { intl: intlShape }\r\n    });\r\n}\r\n\r\nfunction initContext() {\r\n    const intlProvider = new IntlProvider({locale: locale, messages: messages}, {});\r\n    const intlContext = intlProvider.getChildContext();\r\n    intl = {intlContext};\r\n}\r\n\r\n/**\r\n * Helper that passes intl object to the wrapped React Component.\r\n * @param {object} node React Component that requires react-intl.\r\n * @return {object}\r\n */\r\nfunction nodeWithIntlProp(node) {\r\n    return React.cloneElement(node, { intl });\r\n}\r\n\r\n\r\nvar enzymeReactIntl = {\r\n    loadTranslation: loadTranslation,\r\n    shallowWithIntl: shallowWithIntl,\r\n    mountWithIntl: mountWithIntl\r\n};\r\nmodule.exports = enzymeReactIntl;\n\n\n// WEBPACK FOOTER //\n// src/index.js","import React from 'react';\r\n\r\nclass Test extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\n\n\n// WEBPACK FOOTER //\n// test/testComponent.jsx","module.exports = require(\"chai\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"chai-enzyme\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai-enzyme\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"enzyme\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"enzyme\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"react-intl\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-intl\"\n// module id = 8\n// module chunks = 0","import React from 'react';\r\nimport chai, {expect, assert} from 'chai';\r\nimport chaiEnzyme from 'chai-enzyme';\r\nchai.use(chaiEnzyme());\r\nimport { loadTranslation, shallowWithIntl } from '../src/index.js';\r\nimport Test from './testComponent.jsx';\r\nimport jsonfile from 'jsonfile';\r\nvar testLanguageFile = './test/testLanguageFile.json';\r\nvar testLanguageFileMessages = jsonfile.readFileSync(testLanguageFile);\r\n\r\ndescribe('enzymeReactIntl', function() {\r\n    describe('loadTranslation', function() {\r\n        it('messages should be loaded from the language file', function () {\r\n            let messages = loadTranslation('/test/testLanguageFile.json');\r\n            expect(messages).to.deep.equal(testLanguageFileMessages);\r\n        });\r\n    });\r\n    describe('shallowWithIntl', function() {\r\n        it('passes the correct props to the component', function () {\r\n            let wrapper = shallowWithIntl(<Test></Test>);\r\n            //console.log(wrapper);\r\n            expect(wrapper).to.have.prop('intl');\r\n            //let p = wrapper.instance().props;\r\n            //expect(p).to.equal({intl: {intlContext: {intl: {}}}});\r\n        });\r\n    });\r\n});\n\n\n// WEBPACK FOOTER //\n// test/test.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChEA;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;ACtEA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAKA;AACA;;;AAAA;AACA;AAGA;;;;AAXA;AACA;AAaA;;;;;;AChBA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AAJA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}